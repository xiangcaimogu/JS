正课:
1. ***String
  截取子字符串
  ***查找关键字:
  ***替换
  ***分隔

2. *****正则表达式:

1. ***String:
截取子字符串:3种:
  1. str.slice(starti,endi+1)
     用法同数组的slice:
      1. 含头不含尾
      2. 支持负数参数
      3. 省略第二个参数，表示截到结尾
  2. str.substring(starti,endi+1)
     特点: 1. 含头不含尾
           2.省略第二个参数，表示截到结尾
     不同: 不支持负数参数
       如果使用倒数第n位,就用length-n
  3. str.substr(starti,n)
     从starti开始，截n个，不用考虑含头不含尾

***查找关键词:4种:
1. 查找一个固定的关键词的位置:
   var i=str.indexOf("关键词",fromi);
   在str中从fromi位置开始，找下一个"关键词"所在的位置。
   返回值: 
     如果找到，返回关键词第一个字符的下标位置
     如果没找到，返回-1
   特殊: 省略fromi表示，从0位置开始。
   强调: indexOf每次只找fromi只有的下*一个*关键词。
     解决:用循环，反复调用indexOf
           每次都将fromi改为当前位置之后
            直到返回-1结束
   var i=str.lastIndexOf("关键词",fromi);
   在str中从fromi位置开始，找前一个"关键词"所在的位置。
   返回值：同indexOf
   特殊: 省略fromi表示，从length-1开始。
  何时使用:只要查找一个固定的关键词的位置
  问题: 无法使用模式匹配的方式查找关键词

2.判断是否包含关键词:(支持正则)
   


*****正则表达式:
  什么是正则表达式:
    描述一个字符串中，字符出现规律的规则
  为什么: 可以使用模式进行模糊匹配
  何时使用: 查找，替换，切割，验证
  如何使用:
   1.最简单的正则，就是关键词原文
   2.字符集:
     规定*一位*字符可用的备选字符列表
     何时使用: 
	只要某*一位*字符，有多个备选时
     如何使用:[备选字符的列表]
     强调:1个字符集，默认只能匹配一位字符
     简写:如果字符集中的字符，部分unicode连续，可用-省略中间的字符
     比如: 1位数字:[0-9]
           1位小写字母:[a-z]
           1位字母:[A-Za-z]
           1位汉字:[\u4e00-\u9fa5]
     如果表示除了xxx之外:
      [^xxx]
   3.预定义字符集:
     对常用字符集的简化：
     1位数字: \d => [0-9]
  1位字母数字或下划线: \w => [0-9A-Za-z_]
     1位空字符: \s => 空格，换行，制表符
     1位任意字符: . => 除回车换行外的一切
     何时使用: 
       如果需求和预定义字符集完全匹配，才能使用。
       如果需求和预定义字符集不匹配，就必须使用普通字符集

   4.量词:规定一个字符集出现次数的规则
    有明确数量限制: 
     字符集{min,max} 字符集最少出现min次，最多不能超过max次
     字符集{min,} 字符集最少出现min次，多了不限！
     字符集{n} 字符集必须n个
    没有明确数量限制:
     ?  可有可无，最多1个
     *  可有可无，多了不限
     +  至少1个，多了不限

   5.选择和分组
     选择: 或  
      正则1|正则2 表示只要和任意一个正则匹配，就符合规则。
     分组: ()划分子表达式
       何时使用: 
   手机号:
     +86或0086 可有可无，最多1次
     空字符  可有可无，多了不限
     1
     34578中选一个
     9位数字
   (\+86|0086)?\s*1[34578]\d{9}

6.指定匹配位置：
开头和结尾：^开头的xxx；$结尾的xxx
何时使用：仅匹配开头的规则和结尾的规则时使用
固定搭配：^正则表达式$:表示从头到尾完整匹配
 何时使用：只要验证时，必须前加^,后加$!
     其余都不加！
比如：匹配字符串开头的所有空字符：^\s+
      匹配字符串结尾的所有空字符：\s+$  
      同时匹配开头和结尾的所有空字符：^\s+|\s+$(加个或)
单词边界：\b：指定字符前后没有连续的字符，只能是空字符；
     比如：\bno\b
           no no nothing
           只能匹配前两个no











 https://regexper.com/








